version: '3.1'

networks:
  kafka1:
    driver: "bridge"
  kafka2:
    driver: "bridge"

services:

  zookeeper-1:
    container_name: zookeeper-1
    image: confluentinc/cp-zookeeper:5.2.2
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888
    networks:
      - kafka1

  kafka-1:
    container_name: kafka-1
    ports:
      - 9092:9092
    image: confluentinc/cp-kafka:5.2.2
    links:
      - zookeeper-1
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - kafka1

  zookeeper-4:
    container_name: zookeeper-4
    image: confluentinc/cp-zookeeper:5.5.1
    ports:
      - 32181:32181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper-4:32888:33888
    networks:
      - kafka2

  kafka-4:
    container_name: kafka-4
    ports:
      - 39092:39092
    image: confluentinc/cp-kafka:5.5.1
    links:
      - zookeeper-4
    depends_on:
      - zookeeper-4
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-4:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-4:39092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - kafka2

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:5.2.2
    restart: always
    depends_on:
      - zookeeper-1
      - kafka-1
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper-1:2181"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,OPTIONS"
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: "*"
    ports:
      - 8085:8085
    networks:
      - kafka1

  schema-registry-ui:
    container_name: schema-registry-ui
    image: landoop/schema-registry-ui:latest
    restart: always
    depends_on:
      - zookeeper-1
      - kafka-1
      - schema-registry
    environment:
      PORT: 8082
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMAREGISTRY_URL: "http://schema-registry:8085"
    ports:
      - 8082:8082
    networks:
      - kafka1